{"ast":null,"code":"var _jsxFileName = \"/Users/Polcito/Documents/jacko/matcha-1/client/src/pages/SettingProfil.js\",\n    _s = $RefreshSig$();\n\n// import React, { useContext, useEffect, useState } from 'react';\n// import axios from 'axios';\n// //import Navbar from \"../components/navbar_unlog\";\n// import '../styles/pages/_settingprofil.scss';\n// import { useSelector } from 'react-redux';\n// //import { differenceInYears } from 'date-fns';\n// //import UploadImg from '../components/profil/UploadImg';\n// import { UidContext } from '../components/AppContext';\nimport React, { useEffect, useState } from 'react';\nimport Navbar from \"../components/navbar_unlog\";\nimport '../styles/pages/_profil.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UploadImg from '../components/profil/UploadImg';\nimport { updateBio } from '../actions/user.actions';\nimport { updateName } from '../actions/user.actions';\nimport { updateFirstname } from '../actions/user.actions';\nimport { updateMail } from '../actions/user.actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SettingProfil = () => {\n  _s();\n\n  const [bio, setBio] = useState('');\n  const [name, setName] = useState('');\n  const [firstname, setFirstname] = useState('');\n  const [mail, setMail] = useState('');\n  const [updateForm, setUpdateForm] = useState(false);\n  const [updateFormName, setUpdateFormName] = useState(false);\n  const [updateFormFirstname, setUpdateFormFirstname] = useState(false);\n  const [updateFormMail, setUpdateFormMail] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const userData = useSelector(state => state.userReducer);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (userData) {\n      setIsLoading(false);\n    }\n  }, [userData]);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 16\n    }, this);\n  } //bio\n\n\n  const handleUpdate = () => {\n    dispatch(updateBio(userData[0].id, bio));\n    setUpdateForm(false);\n    window.location = \"/setting_profil\";\n  }; //name\n\n\n  const handleUpdateName = () => {\n    dispatch(updateName(userData[0].id, name));\n    setUpdateFormName(false);\n    window.location = \"/setting_profil\";\n  }; //firstname\n\n\n  const handleUpdateFirstname = () => {\n    dispatch(updateFirstname(userData[0].id, firstname));\n    setUpdateFormFirstname(false);\n    window.location = \"/setting_profil\";\n  }; //mail\n\n\n  const handleUpdateMail = () => {\n    dispatch(updateMail(userData[0].id, mail));\n    setUpdateFormMail(false);\n    window.location = \"/setting_profil\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"first-profil-container\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Image de profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), userData && userData[0] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userData[0].ppicture,\n        alt: \"user-pic\",\n        height: \"300px\",\n        width: \"300px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 40\n      }, this) : '', /*#__PURE__*/_jsxDEV(UploadImg, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Bio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), updateForm === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: userData && userData[0] && userData[0].bio !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateForm(!updateForm),\n          children: userData[0].bio\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateForm(!updateForm),\n          children: \"Ne manquez pas l'occasion de vous pr\\xE9senter et de rencontrer des personnes qui vous correspondent ! Compl\\xE9tez votre espace de pr\\xE9sentation maintenant.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 27\n        }, this)\n      }, void 0, false), updateForm && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [userData && userData[0] ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          defaultValue: userData[0].bio,\n          onChange: e => setBio(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this), updateFormName === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: userData && userData[0] && userData[0].name !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormName(!updateFormName),\n          children: userData[0].name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormName(!updateFormName),\n          children: \"unknow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 27\n        }, this)\n      }, void 0, false), updateFormName && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [userData && userData[0] ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          defaultValue: userData[0].name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateName,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Firstname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), updateFormFirstname === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: userData && userData[0] && userData[0].firstname !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormFirstname(!updateFormFirstname),\n          children: userData[0].firstname\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormFirstname(!updateFormFirstname),\n          children: \"unknow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 27\n        }, this)\n      }, void 0, false), updateFormFirstname && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [userData && userData[0] ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          defaultValue: userData[0].firstname,\n          onChange: e => setFirstname(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateFirstname,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this), updateFormMail === false && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: userData && userData[0] && userData[0].mail !== \"\" ? /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormMail(!updateFormMail),\n          children: userData[0].mail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => setUpdateFormMail(!updateFormMail),\n          children: \"unknow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 27\n        }, this)\n      }, void 0, false), updateFormMail && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [userData && userData[0] ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          defaultValue: userData[0].mail,\n          onChange: e => setMail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdateMail,\n          children: \"update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SettingProfil, \"cQ+Aq4Sb7lxRpKe3bAUGx9kvChI=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SettingProfil;\nexport default SettingProfil; // const SettingProfil = () => {\n//         const uid = useContext(UidContext);\n//         const [name, setName] = useState(\"\");\n//         const [firstname, setFirstname] = useState(\"\");\n//         //const [password, setPassword] = useState(\"\");\n//         //const [newpassword, setNewPassword] = useState(\"\");\n//         const [mail, setMail] = useState(\"\");\n//         const [gender, setGender] = useState(\"\");\n//         const [orientation, setOrientation] = useState(\"\");\n//         const [bio, setBio] = useState(\"\");\n//         //const [error, setError] = useState();\n//     const [isLoading, setIsLoading] = useState(true);\n//     const userData = useSelector((state) => state.userReducer)\n//     useEffect(() => {\n//         if (userData) {\n//             setIsLoading(false);\n//         }\n//     }, [userData]);\n//     if (isLoading) {\n//         return <div>Chargement...</div>;\n//     }\n//     //les fonctions sont ici\n//     // async function update_name(e)\n//     // {\n//     //     e.preventDefault();\n//     //     if (name.trim().length === 0)\n//     //     {   \n//     //         //gérer les erreurs ici\n//     //         return ;\n//     //     }\n//     //     axios({\n//     //         method: \"post\",\n//     //         url: `http://localhost:5000/api/user/`,\n//     //         withCredentials: true,\n//     //         data: {\n//     //             name,\n//     //         }\n//     //     })\n//     // }\n//     async function update_profil(e)\n//     {\n//         e.preventDefault();\n//         if (userData && userData[0])\n//         {\n//             if (!name)\n//                 setName(userData[0].name);\n//             if (name.trim().length === 0)\n//             {\n//                 setName(userData[0].name);\n//                 console.log(\"name : \" + name)\n//             }\n//             if (firstname.trim().length === 0)\n//             {\n//                 setFirstname(userData[0].firstname);\n//                 console.log(\"Firstname : \" + firstname)\n//             }\n//             if (mail.trim().length === 0)\n//             {\n//                 setMail(userData[0].mail);\n//                 console.log(\"mail : \" + mail)\n//             }\n//         }\n//         await axios({\n//             method: \"put\",\n//             url: `http://localhost:5000/api/user/update_profil`,\n//             withCredentials: true,\n//             data: {\n//                 uid,\n//                 name,\n//                 firstname,\n//                 mail,\n//                 gender,\n//                 orientation,\n//                 bio,\n//             }\n//         })\n//             .then((res) => {\n//                 if (res.status === 200) {\n//                     console.log('enregistrement réussi form envoyé');\n//                     //setFormSubmit(true);\n//                 } else {\n//                     console.log(\"item\");\n//                 }\n//             })\n//             .catch((err) => {\n//                 console.log(err);\n//                 //setError(true);\n//                 // if (err.response.data.error === \"password invalide\" || err.response.data.error === \"Le mail existe deja\")\n//                 // {\n//                     // setError({\n//                     //     title: \"Erreur de connection\",\n//                     //     message: err.response.data.error\n//                     // })\n//                     console.log(\"Erreur de connection (mdp ou mail)\")\n//                 // }\n//             })\n//     };\n//     //\n//     return (\n//         <div>\n//             <form onSubmit={update_profil} className='little_form'>\n//             <div>\n//                 <h5>Prénom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={name} onChange={(e)=>setName(e.target.value)} id=\"Prénom\" placeholder={userData[0].name} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Nom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={firstname} onChange={(e)=>setFirstname(e.target.value)} id=\"Nom\" placeholder={userData[0].firstname} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Email</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={mail} onChange={(e)=>setMail(e.target.value)} id=\"Email\" placeholder={userData[0].mail} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>genre</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Genre\" className=\"\" value={gender} onChange={(e)=>setGender(e.target.value)} id=\"genre\"> \n//                     <option value={userData[0].gender}>genre</option>\n//                     <option>Homme</option>\n//                     <option>Femme</option>\n//                 </select>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>orientation</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Orientation\" className=\"\" value={orientation} onChange={(e)=>setOrientation(e.target.value)} id=\"orientation\">\n//                         <option value={userData[0].orientation}>orientation sexuelle</option>\n//                         <option>Heterosexuel</option>\n//                         <option>Homosexuel</option>\n//                         <option>Bisexuel</option>\n//                     </select>\n//                     : \"\"}\n//             </div>\n//             <div>\n//                 <h5>bio</h5>\n//                 {userData && userData[0] ?\n//                 <textarea className=\"\" type=\"text\" defaultValue={bio} placeholder={userData[0].bio} onChange={(e)=>setBio(e.target.value)} id=\"bio\"></textarea>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Photo de profil</h5>\n//             </div>\n//                 <input type=\"submit\" value=\"Envoyer\"/>\n//             </form>\n//         </div>\n//     );\n// };\n// export default SettingProfil;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingProfil\");","map":{"version":3,"names":["React","useEffect","useState","Navbar","useDispatch","useSelector","UploadImg","updateBio","updateName","updateFirstname","updateMail","SettingProfil","bio","setBio","name","setName","firstname","setFirstname","mail","setMail","updateForm","setUpdateForm","updateFormName","setUpdateFormName","updateFormFirstname","setUpdateFormFirstname","updateFormMail","setUpdateFormMail","isLoading","setIsLoading","userData","state","userReducer","dispatch","handleUpdate","id","window","location","handleUpdateName","handleUpdateFirstname","handleUpdateMail","ppicture","e","target","value"],"sources":["/Users/Polcito/Documents/jacko/matcha-1/client/src/pages/SettingProfil.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import axios from 'axios';\n// //import Navbar from \"../components/navbar_unlog\";\n// import '../styles/pages/_settingprofil.scss';\n// import { useSelector } from 'react-redux';\n// //import { differenceInYears } from 'date-fns';\n// //import UploadImg from '../components/profil/UploadImg';\n// import { UidContext } from '../components/AppContext';\n\n\n\n\n\nimport React, { useEffect, useState } from 'react';\nimport Navbar from \"../components/navbar_unlog\";\nimport '../styles/pages/_profil.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport UploadImg from '../components/profil/UploadImg';\n\nimport { updateBio } from '../actions/user.actions';\nimport { updateName } from '../actions/user.actions';\nimport { updateFirstname } from '../actions/user.actions';\nimport { updateMail } from '../actions/user.actions';\n\n\nconst SettingProfil = () => {\n    const [bio, setBio] = useState('');\n    const [name, setName] = useState('');\n    const [firstname, setFirstname] = useState('');\n    const [mail, setMail] = useState('');\n\n    const [updateForm, setUpdateForm] = useState(false);\n    const [updateFormName, setUpdateFormName] = useState(false);\n    const [updateFormFirstname, setUpdateFormFirstname] = useState(false);\n    const [updateFormMail, setUpdateFormMail] = useState(false);\n\n    const [isLoading, setIsLoading] = useState(true);\n    const userData = useSelector((state) => state.userReducer)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (userData) {\n            setIsLoading(false);\n        }\n    }, [userData]);\n\n    if (isLoading) {\n        return <div>Chargement...</div>;\n    }\n\n    //bio\n    const handleUpdate = () => {\n        dispatch(updateBio(userData[0].id, bio));\n        setUpdateForm(false);\n        window.location = \"/setting_profil\"\n    }\n    \n    //name\n    const handleUpdateName = () => {\n        dispatch(updateName(userData[0].id, name));\n        setUpdateFormName(false);\n        window.location = \"/setting_profil\"\n    }\n    \n    //firstname\n    const handleUpdateFirstname = () => {\n        dispatch(updateFirstname(userData[0].id, firstname));\n        setUpdateFormFirstname(false);\n        window.location = \"/setting_profil\"\n    }\n    \n    //mail\n    const handleUpdateMail = () => {\n        dispatch(updateMail(userData[0].id, mail));\n        setUpdateFormMail(false);\n        window.location = \"/setting_profil\"\n    }\n    \n    return (\n        <div>\n            <div className=\"first-profil-container\">\n            <Navbar />\n            {/* <h1>{userData && userData[0] ? capitalizeFirstLetter(userData[0].name) + ' ' + capitalizeFirstLetter(userData[0].firstname) + ', ' + differenceInYears(new Date() ,new Date(userData[0].dob)) : ''}</h1> */}\n            <h3>Image de profil</h3>\n            {userData && userData[0] ? <img src={userData[0].ppicture} alt=\"user-pic\" height=\"300px\" width=\"300px\"/> : '' }\n            <UploadImg />\n            <h3>Bio</h3>\n                {updateForm === false && (\n                    <>\n                        {userData && userData[0] && userData[0].bio !== null ?\n                        <p onClick={() => setUpdateForm(!updateForm)}>{userData[0].bio}</p>\n                        : <p onClick={() => setUpdateForm(!updateForm)}>Ne manquez pas l'occasion de vous présenter et de rencontrer des personnes qui vous correspondent ! Complétez votre espace de présentation maintenant.</p> }\n                    </>\n                )}\n                {updateForm && (\n                    <>\n                        {userData && userData[0] ?\n                        <textarea type=\"text\" defaultValue={userData[0].bio} onChange={(e) =>\n                        setBio(e.target.value)}></textarea>\n                        : \"\" }\n                        <button onClick={handleUpdate}>update</button>\n                    </>\n                )}\n            <h3>Name</h3>\n                {updateFormName === false && (\n                    <>\n                        {userData && userData[0] && userData[0].name !== \"\" ?\n                        <p onClick={() => setUpdateFormName(!updateFormName)}>{userData[0].name}</p>\n                        : <p onClick={() => setUpdateFormName(!updateFormName)}>unknow</p> }\n                    </>\n                )}\n                {updateFormName && (\n                    <>\n                        {userData && userData[0] ?\n                        <textarea type=\"text\" defaultValue={userData[0].name} onChange={(e) =>\n                        setName(e.target.value)}></textarea>\n                        : \"\" }\n                        <button onClick={handleUpdateName}>update</button>\n                    </>\n                )}\n            <h3>Firstname</h3>\n                {updateFormFirstname === false && (\n                    <>\n                        {userData && userData[0] && userData[0].firstname !== \"\" ?\n                        <p onClick={() => setUpdateFormFirstname(!updateFormFirstname)}>{userData[0].firstname}</p>\n                        : <p onClick={() => setUpdateFormFirstname(!updateFormFirstname)}>unknow</p> }\n                    </>\n                )}\n                {updateFormFirstname && (\n                    <>\n                        {userData && userData[0] ?\n                        <textarea type=\"text\" defaultValue={userData[0].firstname} onChange={(e) =>\n                        setFirstname(e.target.value)}></textarea>\n                        : \"\" }\n                        <button onClick={handleUpdateFirstname}>update</button>\n                    </>\n                )}\n            <h3>Mail</h3>\n                {updateFormMail === false && (\n                    <>\n                        {userData && userData[0] && userData[0].mail !== \"\" ?\n                        <p onClick={() => setUpdateFormMail(!updateFormMail)}>{userData[0].mail}</p>\n                        : <p onClick={() => setUpdateFormMail(!updateFormMail)}>unknow</p> }\n                    </>\n                )}\n                {updateFormMail && (\n                    <>\n                        {userData && userData[0] ?\n                        <textarea type=\"text\" defaultValue={userData[0].mail} onChange={(e) =>\n                        setMail(e.target.value)}></textarea>\n                        : \"\" }\n                        <button onClick={handleUpdateMail}>update</button>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default SettingProfil;\n\n\n\n\n\n\n\n\n\n\n\n\n\n// const SettingProfil = () => {\n    \n//         const uid = useContext(UidContext);\n//         const [name, setName] = useState(\"\");\n//         const [firstname, setFirstname] = useState(\"\");\n//         //const [password, setPassword] = useState(\"\");\n//         //const [newpassword, setNewPassword] = useState(\"\");\n//         const [mail, setMail] = useState(\"\");\n//         const [gender, setGender] = useState(\"\");\n//         const [orientation, setOrientation] = useState(\"\");\n//         const [bio, setBio] = useState(\"\");\n//         //const [error, setError] = useState();\n\n//     const [isLoading, setIsLoading] = useState(true);\n//     const userData = useSelector((state) => state.userReducer)\n\n//     useEffect(() => {\n//         if (userData) {\n//             setIsLoading(false);\n//         }\n//     }, [userData]);\n\n//     if (isLoading) {\n//         return <div>Chargement...</div>;\n//     }\n\n//     //les fonctions sont ici\n//     // async function update_name(e)\n//     // {\n//     //     e.preventDefault();\n//     //     if (name.trim().length === 0)\n//     //     {   \n//     //         //gérer les erreurs ici\n//     //         return ;\n//     //     }\n\n//     //     axios({\n//     //         method: \"post\",\n//     //         url: `http://localhost:5000/api/user/`,\n//     //         withCredentials: true,\n//     //         data: {\n//     //             name,\n//     //         }\n//     //     })\n//     // }\n\n\n//     async function update_profil(e)\n//     {\n//         e.preventDefault();\n            \n//         if (userData && userData[0])\n//         {\n//             if (!name)\n//                 setName(userData[0].name);\n//             if (name.trim().length === 0)\n//             {\n//                 setName(userData[0].name);\n//                 console.log(\"name : \" + name)\n//             }\n//             if (firstname.trim().length === 0)\n//             {\n//                 setFirstname(userData[0].firstname);\n//                 console.log(\"Firstname : \" + firstname)\n//             }\n//             if (mail.trim().length === 0)\n//             {\n//                 setMail(userData[0].mail);\n//                 console.log(\"mail : \" + mail)\n//             }\n//         }\n\n//         await axios({\n//             method: \"put\",\n//             url: `http://localhost:5000/api/user/update_profil`,\n//             withCredentials: true,\n//             data: {\n//                 uid,\n//                 name,\n//                 firstname,\n//                 mail,\n//                 gender,\n//                 orientation,\n//                 bio,\n//             }\n//         })\n//             .then((res) => {\n//                 if (res.status === 200) {\n//                     console.log('enregistrement réussi form envoyé');\n//                     //setFormSubmit(true);\n//                 } else {\n//                     console.log(\"item\");\n//                 }\n//             })\n//             .catch((err) => {\n//                 console.log(err);\n//                 //setError(true);\n//                 // if (err.response.data.error === \"password invalide\" || err.response.data.error === \"Le mail existe deja\")\n//                 // {\n//                     // setError({\n//                     //     title: \"Erreur de connection\",\n//                     //     message: err.response.data.error\n//                     // })\n//                     console.log(\"Erreur de connection (mdp ou mail)\")\n//                 // }\n//             })\n//     };\n\n//     //\n\n//     return (\n//         <div>\n//             <form onSubmit={update_profil} className='little_form'>\n//             <div>\n//                 <h5>Prénom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={name} onChange={(e)=>setName(e.target.value)} id=\"Prénom\" placeholder={userData[0].name} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Nom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={firstname} onChange={(e)=>setFirstname(e.target.value)} id=\"Nom\" placeholder={userData[0].firstname} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Email</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={mail} onChange={(e)=>setMail(e.target.value)} id=\"Email\" placeholder={userData[0].mail} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>genre</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Genre\" className=\"\" value={gender} onChange={(e)=>setGender(e.target.value)} id=\"genre\"> \n//                     <option value={userData[0].gender}>genre</option>\n//                     <option>Homme</option>\n//                     <option>Femme</option>\n//                 </select>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>orientation</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Orientation\" className=\"\" value={orientation} onChange={(e)=>setOrientation(e.target.value)} id=\"orientation\">\n//                         <option value={userData[0].orientation}>orientation sexuelle</option>\n//                         <option>Heterosexuel</option>\n//                         <option>Homosexuel</option>\n//                         <option>Bisexuel</option>\n//                     </select>\n//                     : \"\"}\n//             </div>\n//             <div>\n//                 <h5>bio</h5>\n//                 {userData && userData[0] ?\n//                 <textarea className=\"\" type=\"text\" defaultValue={bio} placeholder={userData[0].bio} onChange={(e)=>setBio(e.target.value)} id=\"bio\"></textarea>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Photo de profil</h5>\n//             </div>\n//                 <input type=\"submit\" value=\"Envoyer\"/>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default SettingProfil;"],"mappings":"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},"metadata":{},"sourceType":"module"}
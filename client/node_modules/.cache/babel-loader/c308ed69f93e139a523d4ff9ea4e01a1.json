{"ast":null,"code":"// import React, { useContext, useEffect, useState } from 'react';\n// import axios from 'axios';\n// //import Navbar from \"../components/navbar_unlog\";\n// import '../styles/pages/_settingprofil.scss';\n// import { useSelector } from 'react-redux';\n// //import { differenceInYears } from 'date-fns';\n// //import UploadImg from '../components/profil/UploadImg';\n// import { UidContext } from '../components/AppContext';\n// const SettingProfil = () => {\n//         const uid = useContext(UidContext);\n//         const [name, setName] = useState(\"\");\n//         const [firstname, setFirstname] = useState(\"\");\n//         //const [password, setPassword] = useState(\"\");\n//         //const [newpassword, setNewPassword] = useState(\"\");\n//         const [mail, setMail] = useState(\"\");\n//         const [gender, setGender] = useState(\"\");\n//         const [orientation, setOrientation] = useState(\"\");\n//         const [bio, setBio] = useState(\"\");\n//         //const [error, setError] = useState();\n//     const [isLoading, setIsLoading] = useState(true);\n//     const userData = useSelector((state) => state.userReducer)\n//     useEffect(() => {\n//         if (userData) {\n//             setIsLoading(false);\n//         }\n//     }, [userData]);\n//     if (isLoading) {\n//         return <div>Chargement...</div>;\n//     }\n//     //les fonctions sont ici\n//     // async function update_name(e)\n//     // {\n//     //     e.preventDefault();\n//     //     if (name.trim().length === 0)\n//     //     {   \n//     //         //gérer les erreurs ici\n//     //         return ;\n//     //     }\n//     //     axios({\n//     //         method: \"post\",\n//     //         url: `http://localhost:5000/api/user/`,\n//     //         withCredentials: true,\n//     //         data: {\n//     //             name,\n//     //         }\n//     //     })\n//     // }\n//     async function update_profil(e)\n//     {\n//         e.preventDefault();\n//         if (userData && userData[0])\n//         {\n//             if (!name)\n//                 setName(userData[0].name);\n//             if (name.trim().length === 0)\n//             {\n//                 setName(userData[0].name);\n//                 console.log(\"name : \" + name)\n//             }\n//             if (firstname.trim().length === 0)\n//             {\n//                 setFirstname(userData[0].firstname);\n//                 console.log(\"Firstname : \" + firstname)\n//             }\n//             if (mail.trim().length === 0)\n//             {\n//                 setMail(userData[0].mail);\n//                 console.log(\"mail : \" + mail)\n//             }\n//         }\n//         await axios({\n//             method: \"put\",\n//             url: `http://localhost:5000/api/user/update_profil`,\n//             withCredentials: true,\n//             data: {\n//                 uid,\n//                 name,\n//                 firstname,\n//                 mail,\n//                 gender,\n//                 orientation,\n//                 bio,\n//             }\n//         })\n//             .then((res) => {\n//                 if (res.status === 200) {\n//                     console.log('enregistrement réussi form envoyé');\n//                     //setFormSubmit(true);\n//                 } else {\n//                     console.log(\"item\");\n//                 }\n//             })\n//             .catch((err) => {\n//                 console.log(err);\n//                 //setError(true);\n//                 // if (err.response.data.error === \"password invalide\" || err.response.data.error === \"Le mail existe deja\")\n//                 // {\n//                     // setError({\n//                     //     title: \"Erreur de connection\",\n//                     //     message: err.response.data.error\n//                     // })\n//                     console.log(\"Erreur de connection (mdp ou mail)\")\n//                 // }\n//             })\n//     };\n//     //\n//     return (\n//         <div>\n//             <form onSubmit={update_profil} className='little_form'>\n//             <div>\n//                 <h5>Prénom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={name} onChange={(e)=>setName(e.target.value)} id=\"Prénom\" placeholder={userData[0].name} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Nom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={firstname} onChange={(e)=>setFirstname(e.target.value)} id=\"Nom\" placeholder={userData[0].firstname} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Email</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={mail} onChange={(e)=>setMail(e.target.value)} id=\"Email\" placeholder={userData[0].mail} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>genre</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Genre\" className=\"\" value={gender} onChange={(e)=>setGender(e.target.value)} id=\"genre\"> \n//                     <option value={userData[0].gender}>genre</option>\n//                     <option>Homme</option>\n//                     <option>Femme</option>\n//                 </select>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>orientation</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Orientation\" className=\"\" value={orientation} onChange={(e)=>setOrientation(e.target.value)} id=\"orientation\">\n//                         <option value={userData[0].orientation}>orientation sexuelle</option>\n//                         <option>Heterosexuel</option>\n//                         <option>Homosexuel</option>\n//                         <option>Bisexuel</option>\n//                     </select>\n//                     : \"\"}\n//             </div>\n//             <div>\n//                 <h5>bio</h5>\n//                 {userData && userData[0] ?\n//                 <textarea className=\"\" type=\"text\" defaultValue={bio} placeholder={userData[0].bio} onChange={(e)=>setBio(e.target.value)} id=\"bio\"></textarea>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Photo de profil</h5>\n//             </div>\n//                 <input type=\"submit\" value=\"Envoyer\"/>\n//             </form>\n//         </div>\n//     );\n// };\n// export default SettingProfil;","map":{"version":3,"names":[],"sources":["/Users/Polcito/Documents/jacko/matcha-1/client/src/pages/SettingProfil.js"],"sourcesContent":["// import React, { useContext, useEffect, useState } from 'react';\n// import axios from 'axios';\n// //import Navbar from \"../components/navbar_unlog\";\n// import '../styles/pages/_settingprofil.scss';\n// import { useSelector } from 'react-redux';\n// //import { differenceInYears } from 'date-fns';\n// //import UploadImg from '../components/profil/UploadImg';\n// import { UidContext } from '../components/AppContext';\n\n// const SettingProfil = () => {\n    \n//         const uid = useContext(UidContext);\n//         const [name, setName] = useState(\"\");\n//         const [firstname, setFirstname] = useState(\"\");\n//         //const [password, setPassword] = useState(\"\");\n//         //const [newpassword, setNewPassword] = useState(\"\");\n//         const [mail, setMail] = useState(\"\");\n//         const [gender, setGender] = useState(\"\");\n//         const [orientation, setOrientation] = useState(\"\");\n//         const [bio, setBio] = useState(\"\");\n//         //const [error, setError] = useState();\n\n//     const [isLoading, setIsLoading] = useState(true);\n//     const userData = useSelector((state) => state.userReducer)\n\n//     useEffect(() => {\n//         if (userData) {\n//             setIsLoading(false);\n//         }\n//     }, [userData]);\n\n//     if (isLoading) {\n//         return <div>Chargement...</div>;\n//     }\n\n//     //les fonctions sont ici\n//     // async function update_name(e)\n//     // {\n//     //     e.preventDefault();\n//     //     if (name.trim().length === 0)\n//     //     {   \n//     //         //gérer les erreurs ici\n//     //         return ;\n//     //     }\n\n//     //     axios({\n//     //         method: \"post\",\n//     //         url: `http://localhost:5000/api/user/`,\n//     //         withCredentials: true,\n//     //         data: {\n//     //             name,\n//     //         }\n//     //     })\n//     // }\n\n\n//     async function update_profil(e)\n//     {\n//         e.preventDefault();\n            \n//         if (userData && userData[0])\n//         {\n//             if (!name)\n//                 setName(userData[0].name);\n//             if (name.trim().length === 0)\n//             {\n//                 setName(userData[0].name);\n//                 console.log(\"name : \" + name)\n//             }\n//             if (firstname.trim().length === 0)\n//             {\n//                 setFirstname(userData[0].firstname);\n//                 console.log(\"Firstname : \" + firstname)\n//             }\n//             if (mail.trim().length === 0)\n//             {\n//                 setMail(userData[0].mail);\n//                 console.log(\"mail : \" + mail)\n//             }\n//         }\n\n//         await axios({\n//             method: \"put\",\n//             url: `http://localhost:5000/api/user/update_profil`,\n//             withCredentials: true,\n//             data: {\n//                 uid,\n//                 name,\n//                 firstname,\n//                 mail,\n//                 gender,\n//                 orientation,\n//                 bio,\n//             }\n//         })\n//             .then((res) => {\n//                 if (res.status === 200) {\n//                     console.log('enregistrement réussi form envoyé');\n//                     //setFormSubmit(true);\n//                 } else {\n//                     console.log(\"item\");\n//                 }\n//             })\n//             .catch((err) => {\n//                 console.log(err);\n//                 //setError(true);\n//                 // if (err.response.data.error === \"password invalide\" || err.response.data.error === \"Le mail existe deja\")\n//                 // {\n//                     // setError({\n//                     //     title: \"Erreur de connection\",\n//                     //     message: err.response.data.error\n//                     // })\n//                     console.log(\"Erreur de connection (mdp ou mail)\")\n//                 // }\n//             })\n//     };\n\n//     //\n\n//     return (\n//         <div>\n//             <form onSubmit={update_profil} className='little_form'>\n//             <div>\n//                 <h5>Prénom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={name} onChange={(e)=>setName(e.target.value)} id=\"Prénom\" placeholder={userData[0].name} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Nom</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={firstname} onChange={(e)=>setFirstname(e.target.value)} id=\"Nom\" placeholder={userData[0].firstname} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Email</h5>\n//                 {userData && userData[0] ? <input className=\"\" type=\"text\" value={mail} onChange={(e)=>setMail(e.target.value)} id=\"Email\" placeholder={userData[0].mail} /> : \"\"}\n//             </div>\n//             <div>\n//                 <h5>genre</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Genre\" className=\"\" value={gender} onChange={(e)=>setGender(e.target.value)} id=\"genre\"> \n//                     <option value={userData[0].gender}>genre</option>\n//                     <option>Homme</option>\n//                     <option>Femme</option>\n//                 </select>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>orientation</h5>\n//                 {userData && userData[0] ?\n//                 <select name=\"Orientation\" className=\"\" value={orientation} onChange={(e)=>setOrientation(e.target.value)} id=\"orientation\">\n//                         <option value={userData[0].orientation}>orientation sexuelle</option>\n//                         <option>Heterosexuel</option>\n//                         <option>Homosexuel</option>\n//                         <option>Bisexuel</option>\n//                     </select>\n//                     : \"\"}\n//             </div>\n//             <div>\n//                 <h5>bio</h5>\n//                 {userData && userData[0] ?\n//                 <textarea className=\"\" type=\"text\" defaultValue={bio} placeholder={userData[0].bio} onChange={(e)=>setBio(e.target.value)} id=\"bio\"></textarea>\n//                 : \"\"}\n//             </div>\n//             <div>\n//                 <h5>Photo de profil</h5>\n//             </div>\n//                 <input type=\"submit\" value=\"Envoyer\"/>\n//             </form>\n//         </div>\n//     );\n// };\n\n// export default SettingProfil;"],"mappings},"metadata":{},"sourceType":"module"}